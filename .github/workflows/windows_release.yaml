name: Windows Release

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  pull_request:
    branches:
      - 'main'
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR: ${{ github.workspace }}
  ARTIFACT: wtplotter-build-Windows-x64.zip

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get all tags for correct version determination
        run: git fetch --all --tags -f

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.1'
          arch: 'win64_msvc2022_64'
          aqtversion: '==3.1.19'

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run: |
          cmake -DCMAKE_PREFIX_PATH=${{ runner.temp }}\Qt\${{ env.QT_VERSION }}\msvc2019_64 -DCMAKE_BUILD_TYPE=Release ${{ env.SOURCE_DIR }}
          cmake --build . --config Release
          cd release
          windeployqt wtplotter.exe --release --no-translations --no-opengl-sw --no-compiler-runtime

      - name: Copy wt_ext_cli.exe
        run: |
          mkdir ${{ runner.temp }}\build\Release\wt_ext_cli
          copy ${{ env.SOURCE_DIR }}\wt_ext_cli\wt_ext_cli.exe ${{ runner.temp }}\build\Release\wt_ext_cli

      - name: Zip build
        working-directory: ${{ runner.temp }}
        run: 7z a ${{ env.ARTIFACT }} ${{ runner.temp }}\build\Release\* -r

      - name: Save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }}

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          files: ${{ runner.temp }}\${{ env.ARTIFACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
